swagger: "2.0"
info:
  version: "0.0.1"
  title: Asset Management API Test
# basePath prefixes all resource paths 
basePath: /
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
tags: [
  { name: 'user'},
  { name: 'asset'},
  { name: 'allocation'}
]
paths:
  /user:
    # our controller name
    x-swagger-router-controller: user
    get:
      tags: ['user']
      description: get the users list
      # define the type of response for Success "200" and Error
      operationId: getAllUsers
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUsersListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags: ['user']
      description: add a new user to the list
      operationId: saveUser
      parameters:
        - name: user
          description: the user object
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{id}:
    # our controller name
    x-swagger-router-controller: user
    get:
      tags: ['user']
      description: get a user
      operationId: getOneUser
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags: ['user']
      description: update a user
      operationId: updateUser
      # define the parameters
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
        - name: user
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags: ['user']
      description: delete a user
      operationId: delUser
      # define the parameters
      parameters:
        - name: id
          description: Movie id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset:
    # our controller name
    x-swagger-router-controller: asset
    get:
      tags: ['asset']
      description: get the assets list
      # define the type of response for Success "200" and Error
      operationId: getAllAssets
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetAssetsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags: ['asset']
      description: add a new asset to the list
      operationId: saveAsset
      parameters:
        - name: asset
          description: asset object
          in: body
          required: true
          schema:
            $ref: "#/definitions/Asset"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /asset/{id}:
    # our controller name
    x-swagger-router-controller: asset
    get:
      tags: ['asset']
      description: get an asset
      operationId: getOneAsset
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetAssetResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags: ['asset']
      description: update an asset
      operationId: updateAsset
      # define the parameters
      parameters:
        - name: id
          description: Asset id
          type: string
          in: path
          required: true
        - name: asset
          description: Asset properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Asset"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags: ['asset']
      description: delete an asset
      operationId: delAsset
      # define the parameters
      parameters:
        - name: id
          description: Asset id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /allocation:
    # our controller name
    x-swagger-router-controller: allocation
    get:
      tags: ['allocation']
      description: get the allocation list
      # define the type of response for Success "200" and Error
      operationId: getAllocations
      parameters:
        - name: user_id
          in: query
          description: The user to filter allocations by
          required: false
          type: string
        - name: asset_id
          in: query
          description: The asset to filter allocations by
          required: false
          type: string
        - name: only_current
          in: query
          description: Get only current allocations ?
          required: false
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetAllocationsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      tags: ['allocation']
      description: add a new allocation to the list
      operationId: saveAllocation
      parameters:
        - name: allocation
          description: allocation object
          in: body
          required: true
          schema:
            $ref: "#/definitions/Allocation"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /allocation/{id}:
    # our controller name
    x-swagger-router-controller: allocation
    get:
      tags: ['allocation']
      description: get an allocation
      operationId: getOneAllocation
      # define the type of response for Success "200" and Error
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetAllocationResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags: ['allocation']
      description: update an asset
      operationId: updateAllocation
      # define the parameters
      parameters:
        - name: id
          description: Allocation id
          type: string
          in: path
          required: true
        - name: allocation
          description: Allocation properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Allocation"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags: ['allocation']
      description: delete an Allocation
      operationId: delAllocation
      # define the parameters
      parameters:
        - name: id
          description: Allocation id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GetUsersListResponse:
    required:
      - users
    properties:
      users:
        type: array
        items: 
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
  GetAssetsListResponse:
    required:
      - assets
    properties:
      assets:
        type: array
        items: 
          type: object
          properties:
            id:
              type: integer
            type:
              type: string
            attributes:
              type: object
  GetAllocationsListResponse:
    required:
      - allocations
    properties:
      allocations:
        type: array
        items: 
          type: object
          properties:
            id:
              type: integer
            user_id: 
              type: integer
            asset_id:
              type: integer
            untill:
              type: string
  User:
    type: object
    properties:
      firstname:
        type: string
        description: user's first name
      lastname:
        type: string
        description: user's last name
      email:
        type: string
        description: user's email
    required:
      - firstname
      - lastname
      - email
  Asset:
    type: object
    properties:
      type:
        type: string
        default: 'type1'
      attributes:
        type: object
        description: asset's information
        default: {
          attr_1_a: 'attribute a for type 1',
          attr_1_b: 'attribute b for type 1',
          attr_2_a: 'attribute a for type 2',
          attr_2_b: 'attribute b for type 2',
        }
    required:
      - type
  Allocation:
    type: object
    properties:
      user_id:
        type: integer
        default: 2
      asset_id:
        type: integer
        default: 1
      untill:
        type: string
        description: untill when is the asset allocated to the user
        default: '2017-05-16 00:00:00'
    required:
      - user_id
      - asset_id
      - untill
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
      object:
        type: object
        description: the relevant object
    required:
      - success
      - description
  GetUserResponse:
    required:
      - firstname
      - lastname
      - email
    properties:
      firstname:
        type: string
      lastname: 
        type: string
      email:
        type: string
  GetAssetResponse:
    required:
      - id
    properties:
      id:
        type: string
      type: 
        type: string
      attributes:
        type: object
  GetAllocationResponse:
    required:
      - id
      - user_id
      - asset_id
      - untill
    properties:
      id:
        type: integer
      user_id:
        type: integer
      asset_id:
        type: integer
      untill:
        type: string
        description: untill when is the asset allocated to the user
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
